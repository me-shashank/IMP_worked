#!/bin/sh
: '
/* Copyright 2018 Schlumberger.  All rights reserved in Schlumberger
authored and generated code (including the selection and arrangement of
the source code base regardless of the authorship of individual files),
but not including any copyright interest(s) owned by a third party
related to source code or object code authored or generated by
non-Schlumberger personnel.

This source code includes Schlumberger confidential and/or proprietary
information and may include Schlumberger trade secrets. Any use,
disclosure and/or reproduction is prohibited unless authorized in
writing. */
'

## object name are command line inputs
source ~/.bash_profile
echo "Starting the script.. "

if [ $# -eq 0 ]
  then
    echo "No arguments supplied"
    echo "Command format <shell script> "
    exit $?
fi


ENV_CFG=$DL_HOME/shared/Config/env.sh
. $ENV_CFG 2> /dev/null


while [[ $1 = -* ]]; do
case $1 in
-p ) g_PROCESS_ID=$2
        shift;;
-io ) INPUT_TABLE=$2
        shift;;

* ) "Bad argument!"; exitInterm
esac
shift
done


CONFIG_FILE=$DL_HOME/SLB_DRIVING_DATA_POND/Prmfiles/tables
SCRIPT_FILE=$DL_HOME/SLB_DRIVING_DATA_POND/Scripts

## configuration parameters
BASE_DIR=/nfs02/data/Inbound/SLB_DRIVING_DATA_POND/API
# INPUT_TABLE=$1
TIME_STAMP=`date +%d%m%y_%H%M%S%3N`
PID=$$
g_CALLER=`echo $0 | cut -d'.' -f1`

. $DL_SHARED_HOME/Config/gen_tempVariables.sh $PID $g_CALLER


LOG_FILE_NAME="/nfs02/app/SIMS/DataLake/SLB_DRIVING_DATA_POND/ScriptsLog/wrapper_"${INPUT_TABLE}"_"${TIME_STAMP}"_"${g_PROCESS_ID}"_"${PID}".log"
echo "`PrInfD` : LOG_FILE_NAME : $LOG_FILE_NAME"
exec >> ${LOG_FILE_NAME} 2>&1                              # writting log file, and redirecting stderr to stdout


input_name="PersonnelQuery_Result"

        if [ "$(ls -A $BASE_DIR)" ]; then
           echo "Cleaning the old files from local and hdfs"
                rm -rf $BASE_DIR/$1*

        fi

        if [ $INPUT_TABLE == $input_name ];then
                echo "Python call: "
                python $SCRIPT_FILE/api_ingestion.py $CONFIG_FILE/PersonnelQuery_Result.json
                RC=$?
                
                if [ $RC -ne 0 ];then
                echo "`PrErrD` : Failure in API data fetch."

                else
                echo "`PrInfD` : API fetch successful."        
                fi
        fi